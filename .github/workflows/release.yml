name: Release

on:
  release:
    types: [published]

defaults:
  run:
    working-directory: docs

jobs:
  version:
    name: Release Version
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.version.outputs.result }}
    steps:
      - id: version
        uses: actions/github-script@c713e510dbd7d213d92d41b7a7805a986f4c5c66 # tag=v6.2.0
        with:
          script: |
            const semver = context.ref.replace('refs/tags/v', '')
            if (semver.match(/^[0-9]+\.[0-9]+\.[0-9]+$/)) {
                return semver
            }
            throw new Error('not semver')
          result-encoding: string

  release_npm:
    name: Release NPM
    runs-on: ubuntu-latest
    needs: Version
    environment: Release NPM
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - uses: pnpm/action-setup@10693b3829bf86eb2572aef5f3571dcf5ca9287d # tag=v2.2.2
        with:
          version: 7

      - uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3.4.1
        with:
          node-version: 16
          cache: pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm -r exec npm version ${{ needs.version.outputs.result }} --git-tag-version=false

      - run: pnpm build

      - run: npm config set "//registry.npmjs.org/:_authToken" "\${NPM_AUTH_TOKEN}" --location=project

      - run: pnpm -r publish --access public --tag latest --no-git-checks
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - run: npm config delete "//registry.npmjs.org/:_authToken" --location=project
        if: always()
